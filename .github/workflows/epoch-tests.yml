##
## Release Tests
##

name: Tests::Epoch

on:
  ## run when create-cache has completed successfully
  ##  create-cache will run when an input-tag is provided, or a PR is approved
  # workflow_dispatch:
  workflow_call:
  # workflow_run:
  #   workflows: ["CI"]
  #   types:
  #     - completed
  # ## old
  # ## run when tagging a release or a PR is approved
  # workflow_dispatch:
  # # workflow_call:
  # # pull_request_target:
  # #   paths:
  # #     - "**.rs"
  # #     - "**.clar"
  # # pull_request_target:
  # #   # Ignore if a commit only includes changes to a Markdown file.
  # #   paths-ignore:
  # #     - "**/*.md"
  # # push:
  # #   paths-ignore:
  # #     - "*.md"
  # #   tags:
  # #     - "[0-9]+.[0-9]+.[0-9]+.[0-9]+.[0-9]+" # 2.1.0.0.0
  # #     - "[0-9]+.[0-9]+.[0-9].[0-9]+.[0-9]+-rc[0-9]+" # 2.1.0.0.0-rc1
  # # pull_request_review:
  # #   types: [submitted]
  # workflow_run:
  #   workflows: ["Create Test Caches"]
  #   types:
  #     - completed
defaults:
  run:
    shell: bash

env:
  BITCOIND_TEST: 1
  RUST_BACKTRACE: full
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 15

concurrency:
  # https://github.com/orgs/community/discussions/13496
  # group: stacks-blockchain-tests-${{ github.ref }}
  group: release-tests-${{ github.workflow }}-${{ github.ref }}
  # Only cancel in progress if this is for a PR
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  # epoch tests with code coverage
  epoch-tests:
    name: Epoch Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 32
      matrix:
        test-name:
          - tests::epoch_205::bigger_microblock_streams_in_2_05
          - tests::epoch_205::test_cost_limit_switch_version205
          - tests::epoch_205::test_dynamic_db_method_costs
          - tests::epoch_205::test_exact_block_costs
          - tests::epoch_205::transition_empty_blocks
          - tests::epoch_21::test_pox_missing_five_anchor_blocks
          - tests::epoch_21::test_pox_reorg_one_flap
          - tests::epoch_21::test_pox_reorgs_three_flaps
          - tests::epoch_21::test_sortition_divergence_pre_21
          - tests::epoch_21::test_v1_unlock_height_with_current_stackers
          - tests::epoch_21::test_v1_unlock_height_with_delay_and_current_stackers
          - tests::epoch_21::trait_invocation_cross_epoch
          - tests::epoch_21::transition_adds_burn_block_height
          - tests::epoch_21::transition_adds_get_pox_addr_recipients
          - tests::epoch_21::transition_adds_mining_from_segwit
          - tests::epoch_21::transition_adds_pay_to_contract
          - tests::epoch_21::transition_empty_blocks
          - tests::epoch_21::transition_fixes_bitcoin_rigidity
          - tests::epoch_21::transition_removes_pox_sunset
          - tests::epoch_22::disable_pox
          - tests::epoch_22::pox_2_unlock_all
          - tests::epoch_22::test_pox_reorg_one_flap
          - tests::epoch_23::trait_invocation_behavior
          - tests::epoch_24::fix_to_pox_contract
          - tests::epoch_24::verify_auto_unlock_behavior
    steps:
      - name: Checkout the latest code
        id: git_checkout
        uses: actions/checkout@v3

      # - name: Setup Rust Toolchain
      #   id: setup_rust_toolchain
      #   uses: actions-rust-lang/setup-rust-toolchain@v1
      #   with:
      #     toolchain: stable
      #     components: llvm-tools-preview
      #     cache: false

      - name: Restore Cargo Cache
        id: restore_cargo_cache
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ github.event.repository.name }}-cargo
          # key: ${{ github.event.repository.name }}-${{ github.sha }}-cargo

      - name: Restore Bitcoin Binary Cache
        id: restore_bitcoin_cache
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          path: /tmp/bitcoin
          key: ${{ github.event.repository.name }}-bitcoin-binaries

      - name: Restore Test Archive Cache
        id: restore_test-archive_cache
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          path: /tmp/test_archive.tar.zst
          key: ${{ github.event.repository.name }}-test-archive
          # key: ${{ github.event.repository.name }}-${{ github.sha }}-test-archive

      - name: Restore Target Cache
        id: restore_target_cache
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          path: ./target
          key: ${{ github.event.repository.name }}-target
          # key: ${{ github.event.repository.name }}-${{ github.sha }}-target

      - name: Link Bitcoin Binary
        id: bitcoin_binary
        run: |
          sudo ln -s /tmp/bitcoin/bin/bitcoind /bin/
          ls -al /bin/bitcoind

      - name: Run Tests
        id: run_tests
        timeout-minutes: 30
        run: |
          cargo nextest run \
            --test-threads num-cpus \
            --run-ignored all \
            --retries 2 \
            --final-status-level fail \
            --fail-fast \
            --archive-file /tmp/test_archive.tar.zst \
            "${{ matrix.test-name }}"

      - name: Run grcov
        id: run_grcov
        run: |
          grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info || exit 1

      # - name: Code Coverage
      #   id: code_coverage
      #   uses: codecov/codecov-action@v3
      #   with:
      #     files: ./lcov.info
      #     name: ${{ matrix.test-name }}
      #     fail_ci_if_error: false

      - name: Upload Code Coverage
        id: code_coverage
        uses: Wandalen/wretry.action@master
        with:
          action: codecov/codecov-action@v3
          with: |
            files: ./lcov.info
            name: ${{ matrix.test-name }}
            fail_ci_if_error: false
            verbose: true
          attempt_limit: 3
          attempt_delay: 10000
