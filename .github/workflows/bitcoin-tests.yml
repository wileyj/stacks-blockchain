##
## Bitcoin Integration Tests
##

name: Bitcoin Integration Tests

on:
  ## run when create-cache has completed successfully
  ##  create-cache will run when an input-tag is provided, or a PR is approved
  workflow_dispatch:
  workflow_call:
  # workflow_run:
  #   workflows: ["Create Test Caches"]
  #   types:
  #     - completed
  # ## old
  # ## run when tagging a release or a PR is approved
  # workflow_dispatch:
  # # workflow_call:
  # # pull_request_target:
  # #   paths:
  # #     - "**.rs"
  # #     - "**.clar"
  # # pull_request_target:
  # #   # Ignore if a commit only includes changes to a Markdown file.
  # #   paths-ignore:
  # #     - "**/*.md"
  # # push:
  # #   paths-ignore:
  # #     - "*.md"
  # #   tags:
  # #     - "[0-9]+.[0-9]+.[0-9]+.[0-9]+.[0-9]+" # 2.1.0.0.0
  # #     - "[0-9]+.[0-9]+.[0-9].[0-9]+.[0-9]+-rc[0-9]+" # 2.1.0.0.0-rc1
  # # pull_request_review:
  # #   types: [submitted]
  # workflow_run:
  #   workflows: ["Create Test Caches"]
  #   types:
  #     - completed

defaults:
  run:
    shell: bash

env:
  BITCOIND_TEST: 1
  RUST_BACKTRACE: full
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 20

concurrency:
  # group: bitcoin-integration-tests-${{ github.ref }}
  group: bitcoin-tests-${{ github.workflow }}-${{ github.ref }}
  # Only cancel in progress if this is for a PR
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  # # check to see if cache exists, if not then recreate it
  # create-cache:
  #   name: Create Test Cache
  #   uses: ./.github/workflows/create-cache.yml
  #   # uses: wileyj/stacks-blockchain/.github/workflows/create_cache.yml@master

  # bitcoin integration tests with code coverage
  integration-tests:
    # if: ${{ false }}
    name: Integration Tests
    runs-on: ubuntu-latest
    # needs:
    #   - create-cache
    steps:
      - name: echo
        run: |
          echo "integration-tests"
          echo "inputs.tag: ${{ inputs.tag }}"
          echo "github.event_name: ${{ github.event_name }}"
          echo "github.event.action: ${{ github.event.action }}"
          echo "github.event.review.state: ${{ github.event.review.state }}"
          echo "true if (input || pr approval): ${{ inputs.tag != '' || ( github.event_name == 'pull_request_review' && github.event.action == 'submitted' && github.event.review.state == 'approved') }}"
          echo "true if (input && not (pr submitted && !(pr comment || pr change requested))): ${{ inputs.tag == '' &&  !( github.event_name == 'pull_request_review' &&  github.event.action == 'submitted' &&  ( github.event.review.state == 'commented' || github.event.review.state == 'changes_requested' ) ) }}"
