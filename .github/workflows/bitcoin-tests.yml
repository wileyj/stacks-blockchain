## Github workflow to run bitcoin tests

name: Tests::Bitcoin

on:
  workflow_call:

defaults:
  run:
    shell: bash

env:
  BITCOIND_TEST: 1
  RUST_BACKTRACE: full
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 15
  RETRIES: 3
  RETRY_DELAY: 10000

concurrency:
  group: bitcoin-tests-${{ github.workflow }}-${{ github.ref }}
  # Only cancel in progress if this is for a PR
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  # bitcoin integration tests with code coverage
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    ## run a maximum of 32 concurrent tests from the test matrix
    strategy:
      fail-fast: false
      max-parallel: 32
      matrix:
        test-name:
          - tests::bitcoin_regtest::bitcoind_integration_test
          - tests::integrations::integration_test_get_info
          - tests::neon_integrations::antientropy_integration_test
          - tests::neon_integrations::bad_microblock_pubkey
          - tests::neon_integrations::bitcoind_forking_test
          - tests::neon_integrations::bitcoind_integration_test
          - tests::neon_integrations::block_large_tx_integration_test
          - tests::neon_integrations::block_limit_hit_integration_test
          - tests::neon_integrations::cost_voting_integration
          - tests::neon_integrations::filter_long_runtime_tx_integration_test
          - tests::neon_integrations::filter_low_fee_tx_integration_test
          - tests::neon_integrations::fuzzed_median_fee_rate_estimation_test_window10
          - tests::neon_integrations::fuzzed_median_fee_rate_estimation_test_window5
          - tests::neon_integrations::liquid_ustx_integration
          - tests::neon_integrations::microblock_fork_poison_integration_test
          - tests::neon_integrations::microblock_integration_test
          - tests::neon_integrations::microblock_large_tx_integration_test_FLAKY
          - tests::neon_integrations::microblock_limit_hit_integration_test
          - tests::neon_integrations::miner_submit_twice
          - tests::neon_integrations::mining_events_integration_test
          - tests::neon_integrations::pox_integration_test
          - tests::neon_integrations::push_boot_receipts
          - tests::neon_integrations::runtime_overflow_unconfirmed_microblocks_integration_test
          - tests::neon_integrations::should_fix_2771
          - tests::neon_integrations::size_check_integration_test
          - tests::neon_integrations::size_overflow_unconfirmed_invalid_stream_microblocks_integration_test
          - tests::neon_integrations::size_overflow_unconfirmed_microblocks_integration_test
          - tests::neon_integrations::size_overflow_unconfirmed_stream_microblocks_integration_test
          - tests::neon_integrations::stx_delegate_btc_integration_test
          - tests::neon_integrations::stx_transfer_btc_integration_test
          - tests::neon_integrations::test_chainwork_first_intervals
          - tests::neon_integrations::test_chainwork_partial_interval
          - tests::neon_integrations::test_flash_block_skip_tenure
          - tests::neon_integrations::test_problematic_blocks_are_not_mined
          - tests::neon_integrations::test_problematic_blocks_are_not_relayed_or_stored
          - tests::neon_integrations::test_problematic_microblocks_are_not_mined
          - tests::neon_integrations::test_problematic_microblocks_are_not_relayed_or_stored
          - tests::neon_integrations::test_problematic_txs_are_not_stored
          - tests::neon_integrations::use_latest_tip_integration_test
          - tests::should_succeed_handling_malformed_and_valid_txs
    steps:
      ## cleanup runner
      - name: Cleanup Runner
        id: runner_cleanup
        uses: wileyj/actions/cleanup@main

      ## Checkout the code
      - name: Checkout the latest code
        id: git_checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      ## Install rust toolchain (llvm-tools-preview)
      - name: Setup Rust Toolchain
        id: setup_rust_toolchain
        uses: actions-rust-lang/setup-rust-toolchain@f3c84ee10bf5a86e7a5d607d487bf17d57670965 # v1.5.0
        with:
          toolchain: stable
          components: llvm-tools-preview
          cache: false

      ## Restore cargo cache data
      - name:  Restore Cargo Cache
        id: restore_cargo_cache
        uses: wileyj/actions/stacks-blockchain-cache/cargo@main
        with:
          action: restore

      ## Restore nextest target cache data
      - name:  Restore Target Cache
        id: restore_target_cache
        uses: wileyj/actions/stacks-blockchain-cache/target@main
        with:
          action: restore
                
      ## Restore bitcoin cache data
      - name:  Restore Bitcoin Binary Cache
        id: restore_bitcoin_cache
        uses: wileyj/actions/stacks-blockchain-cache/bitcoin@main
        with:
          action: restore

      ## Restore nextest archive cache data
      - name:  Restore Test Archive Cache
        id: restore_test_cache
        uses: wileyj/runner-cache/test-archive@main
        with:
          action: restore
          
      ## Symlink bitoind to $PATH
      - name: Link Bitcoin Binary
        id: bitcoin_binary
        run: |
          sudo ln -s /tmp/bitcoin/bin/bitcoind /bin/
          ls -al /bin/bitcoind

      ## Run test matrix using cached archive file
      ##   - timeout after 30 minutes
      - name: Run Tests
        id: run_tests
        timeout-minutes: 30
        run: |
          cargo nextest run \
            --test-threads 1  \
            --run-ignored all \
            --retries 2 \
            --final-status-level fail \
            --fail-fast \
            --archive-file /tmp/test_archive.tar.zst \
            "${{ matrix.test-name }}"

      ## Generate code coverage using grcov
      - name: Run grcov
        id: run_grcov
        run: |
          grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info || exit 1
          echo "created=true\n" >> $GITHUB_OUTPUT

      ## Upload coverage to codecov
      ##   - use wretry action, to retry on a failed upload
      - name: Upload Code Coverage
        id: code_coverage
        uses: Wandalen/wretry.action@a163f62ae554a8f3cbe27b23db15b60c0ae2e93c # v1.3.0
        with:
          action: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
          with: |
            files: ./lcov.info
            name: ${{ matrix.test-name }}
            fail_ci_if_error: false
            verbose: true
          attempt_limit: ${{ env.RETRIES}}
          attempt_delay: ${{ env.RETRY_DELAY}}
