##
## Stacks Blockchain Tests
##

name: Stacks Blockchain Tests

on:
  ## run when create-cache has completed successfully
  ##  create-cache will run when an input-tag is provided, or a PR is approved
  workflow_dispatch:
  workflow_call:
  # push:
  #   paths-ignore:
  #     - "**.md"
  #     - "**.yml"
  #   tags:
  #     - "[0-9]+.[0-9]+.[0-9]+.[0-9]+.[0-9]+" # 2.1.0.0.0
  #     - "[0-9]+.[0-9]+.[0-9].[0-9]+.[0-9]+-rc[0-9]+" # 2.1.0.0.0-rc1
  # workflow_run:
  #   workflows: ["Create Test Caches"]
  #   types:
  #     - completed

defaults:
  run:
    shell: bash

env:
  BITCOIND_TEST: 1
  RUST_BACKTRACE: full
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 15

concurrency:
  # https://github.com/orgs/community/discussions/13496
  # group: stacks-blockchain-tests-${{ github.ref }}
  group: stacks-blockchain-tests-${{ github.workflow }}-${{ github.ref }}
  # Only cancel in progress if this is for a PR
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  # full genesis test with code coverage
  full-genesis:
    # if: ${{ false }}
    name: Full Genesis Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        test-name:
          - neon_integrations::bitcoind_integration_test
    steps:
      - name: Checkout the latest code
        id: git_checkout
        run: |
          echo "Checkout the latest code"

      - name: Setup Rust Toolchain
        id: setup_rust_toolchain
        run: |
          echo "Setup Rust Toolchain"

      - name: Restore Cargo Cache
        id: restore_cargo_cache
        run: |
          echo "Restore Cargo Cache"

      - name: Restore Bitcoin Binary Cache
        id: restore_bitcoin_cache
        run: |
          echo "Restore Bitcoin Binary Cache"

      - name: Restore Genesis Archive Cache
        id: restore_test-archive_cache
        run: |
          echo "Restore Genesis Archive Cache"

      - name: Restore Target Cache
        id: restore_target_cache
        run: |
          echo "Restore Target Cache"

      - name: Link Bitcoin Binary
        id: bitcoin_binary
        run: |
          echo "Link Bitcoin Binary"

      - name: Run Tests
        id: run_tests
        run: |
          echo "Run Test ${{ matrix.test-name }}"

      - name: Run grcov
        id: run_grcov
        run: |
          echo " Run grcov"

      - name: Large Genesis Codecov
        id: full_genesis_codecov
        run: |
          echo "Large Genesis Codecov"

  # unit tests with code coverage
  unit-tests:
    # if: ${{ false }}
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the latest code
        id: git_checkout
        run: |
          echo "Checkout the latest code"

      - name: Setup Rust Toolchain
        id: setup_rust_toolchain
        run: |
          echo "Setup Rust Toolchain"

      - name: Restore Cargo Cache
        id: restore_cargo_cache
        run: |
          echo "Restore Cargo Cache"

      - name: Restore Bitcoin Binary Cache
        id: restore_bitcoin_cache
        run: |
          echo "Restore Bitcoin Binary Cache"

      - name: Restore Test Archive Cache
        id: restore_test-archive_cache
        run: |
          echo "Restore Test Archive Cache"

      - name: Restore Target Cache
        id: restore_target_cache
        run: |
          echo "Restore Target Cache"

      - name: Link Bitcoin Binary
        id: bitcoin_binary
        run: |
          echo "Link Bitcoin Binary"

      - name: Run Tests
        id: run_tests
        run: |
          echo "Run Test  ${{ matrix.test-name }}""

      - name: Run grcov
        id: run_grcov
        run: |
          echo "Run grcov"

      - name: Upload Code Coverage
        id: code_coverage
        run: |
          echo ""

  open-api-validation:
    # if: ${{ false }}
    name: OpenAPI Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the latest code
        id: git_checkout
        run: |
          echo "Checkout the latest code"

      - name: Redoc
        id: run_redoc
        run: |
          echo "Redoc"

      - name: check result
        id: check_redoc
        run: |
          echo "check result"

      - name: Upload bundled html
        id: upload_html_artifact
        run: |
          echo "Upload bundled html"

  # Disabled :: net-tests
  nettest:
    # disable this job/test for now, since we haven't seen this pass
    #  on github actions in a while, and the failures can take > 4 hours
    if: ${{ false }}
    name: Net-Test
    runs-on: ubuntu-latest
    # runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
      - name: Checkout the latest code
        id: git_checkout
        run: |
          echo "Checkout the latest code"

      - name: Run network relay tests
        id: nettest
        run: |
          echo "Run network relay tests"

  # Core contract tests
  core-contracts-clarinet-test:
    name: Core Contracts Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the latest code
        id: git_checkout
        run: |
          echo "Checkout the latest code"

      - name: Execute core contract unit tests in Clarinet
        id: clarinet_unit_test
        run: |
          echo "Execute core contract unit tests in Clarinet"

      - name: Export code coverage
        id: clarinet_codecov
        run: |
          echo "Export code coverage"
