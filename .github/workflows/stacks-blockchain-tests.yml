##
## Run tests for tagged releases
##

name: Stacks Blockchain Tests

# Only run when:
#   - manually triggered via the ci.yml workflow

on:
  ## run when tagging a release or a PR is approved
  workflow_dispatch:
  workflow_call:
  # push:
  #   tags:
  #     - "[0-9]+.[0-9]+.[0-9]+.[0-9]+.[0-9]+" # 2.1.0.0.0
  #     - "[0-9]+.[0-9]+.[0-9].[0-9]+.[0-9]+-rc[0-9]+" # 2.1.0.0.0-rc1
  pull_request_review:
    types: [submitted]

env:
  BITCOIND_TEST: 1
  RUST_BACKTRACE: full
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 15

concurrency:
  group: stacks-blockchain-tests-${{ github.ref }}
  # Only cancel in progress if this is for a PR
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  create-cache:
    name: Create Test Cache
    uses: ./.github/workflows/create-cache.yml
    # uses: wileyj/stacks-blockchain/.github/workflows/create_cache.yml@master

  full-genesis:
    name: Full Genesis Test
    runs-on: ubuntu-latest
    # runs-on: buildjet-4vcpu-ubuntu-2204
    needs:
      - create-cache
    steps:
      - name: Checkout the latest code
        id: git_checkout
        uses: actions/checkout@v3

      - name: Setup Rust Toolchain
        if: steps.check_cache.outputs.cache-hit != 'true'
        id: setup_rust_toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: llvm-tools-preview

      - name: Restore Cargo Cache
        id: restore_cargo_cache
        # uses: buildjet/cache/restore@v3
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          # path: ~/.cargo
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ github.event.repository.name }}-cargo
          # key: ${{ github.event.repository.name }}-${{ github.sha }}-cargo

      - name: Restore Bitcoin Binary Cache
        id: restore_bitcoin_cache
        # uses: buildjet/cache/restore@v3
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          path: /tmp/bitcoin
          key: ${{ github.event.repository.name }}-bitcoin-binaries

      - name: Restore Genesis Archive Cache
        id: restore_test-archive_cache
        # uses: buildjet/cache/restore@v3
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          path: /tmp/genesis_archive.tar.zst
          key: ${{ github.event.repository.name }}-genesis-archive
          # key: ${{ github.event.repository.name }}-${{ github.sha }}-genesis-archive

      - name: Restore Target Cache
        id: restore_target_cache
        # uses: buildjet/cache/restore@v3
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          # path: ./target/debug
          # key: ${{ github.event.repository.name }}-target-debug
          # # key: ${{ github.event.repository.name }}-${{ github.sha }}-target-debug
          path: ./target
          key: ${{ github.event.repository.name }}-target

      # - name: Download archive
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: test_archive

      - name: Link Bitcoin Binary
        id: bitcoin_binary
        run: |
          sudo ln -s /tmp/bitcoin/bin/bitcoind /bin/
          ls -al /bin/bitcoind

      - name: Run tests
        id: run_tests
        run: |
          cargo nextest run \
           --test-threads 1 \
           --run-ignored all \
           --retries 2 \
           --archive-file /tmp/genesis_archive.tar.zst \
           neon_integrations::bitcoind_integration_test

      - name: Run grcov
        id: run_grcov
        run: |
          grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info

      - name: Large Genesis Codecov
        id: full_genesis_codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./lcov.info
          name: large_genesis
          fail_ci_if_error: true

  # Run unit tests with code coverage
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    # runs-on: buildjet-4vcpu-ubuntu-2204
    needs:
      - create-cache
    steps:
      - name: Checkout the latest code
        id: git_checkout
        uses: actions/checkout@v3

      - name: Setup Rust Toolchain
        if: steps.check_cache.outputs.cache-hit != 'true'
        id: setup_rust_toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: llvm-tools-preview

      - name: Restore Cargo Cache
        id: restore_cargo_cache
        # uses: buildjet/cache/restore@v3
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          # path: ~/.cargo
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ github.event.repository.name }}-cargo
          # key: ${{ github.event.repository.name }}-${{ github.sha }}-cargo

      - name: Restore Bitcoin Binary Cache
        id: restore_bitcoin_cache
        # uses: buildjet/cache/restore@v3
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          path: /tmp/bitcoin
          key: ${{ github.event.repository.name }}-bitcoin-binaries

      - name: Restore Test Archive Cache
        id: restore_test-archive_cache
        # uses: buildjet/cache/restore@v3
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          path: /tmp/test_archive.tar.zst
          key: ${{ github.event.repository.name }}-test-archive
          # key: ${{ github.event.repository.name }}-${{ github.sha }}-test-archive

      - name: Restore Target Cache
        id: restore_target_cache
        # uses: buildjet/cache/restore@v3
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          # path: ./target/debug
          # key: ${{ github.event.repository.name }}-target-debug
          # # key: ${{ github.event.repository.name }}-${{ github.sha }}-target-debug
          path: ./target
          key: ${{ github.event.repository.name }}-target

      # - name: Download archive
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: test_archive

      - name: Link Bitcoin Binary
        id: bitcoin_binary
        run: |
          sudo ln -s /tmp/bitcoin/bin/bitcoind /bin/
          ls -al /bin/bitcoind

      - name: Run tests
        id: run_tests
        run: |
          cargo nextest run \
            --test-threads num-cpus  \
            --run-ignored all \
            --archive-file /tmp/test_archive.tar.zst \
            --retries 2 \
            neon_integrations::bitcoind_integration_test

      - name: Run grcov
        id: run_grcov
        run: |
          grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info

      - name: Unit Test Codecov
        id: codedov
        uses: codecov/codecov-action@v3
        with:
          files: ./lcov.info
          name: unit_tests
          fail_ci_if_error: true

  open-api-validation:
    name: OpenAPI Validation
    runs-on: ubuntu-latest
    # runs-on: buildjet-2vcpu-ubuntu-2204
    steps:
      - name: Checkout the latest code
        id: git_checkout
        uses: actions/checkout@v3

      - name: Redoc
        id: run_redoc
        uses: seeebiii/redoc-cli-github-action@v10
        with:
          args: "bundle -o ./open-api-docs.html ./docs/rpc/openapi.yaml"

      - name: check result
        id: check_redoc
        run: |
          test -f ./open-api-docs.html || (echo "Missing ./open-api-docs.html from previous step." && exit 1)

      - name: Upload bundled html
        id: upload_html_artifact
        uses: actions/upload-artifact@v3
        with:
          name: open-api-bundle
          path: |
            ./open-api-docs.html

  # Run net-tests
  nettest:
    # disable this job/test for now, since we haven't seen this pass
    #  on github actions in a while, and the failures can take > 4 hours
    if: ${{ false }}
    name: Net-Test
    runs-on: ubuntu-latest
    # runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
      - name: Checkout the latest code
        id: git_checkout
        uses: actions/checkout@v3
      - name: Run network relay tests
        id: nettest
        env:
          DOCKER_BUILDKIT: 1
        run: docker build -f ./.github/actions/bitcoin-int-tests/Dockerfile.net-tests .

  # Core contract tests
  core-contracts-clarinet-test:
    name: Core Contracts Test
    runs-on: ubuntu-latest
    # runs-on: buildjet-2vcpu-ubuntu-2204
    steps:
      - name: Checkout the latest code
        id: git_checkout
        uses: actions/checkout@v3

      - name: Execute core contract unit tests in Clarinet
        id: clarinet_unit_test
        uses: docker://hirosystems/clarinet:latest
        with:
          args: test --coverage --manifest-path=./contrib/core-contract-tests/Clarinet.toml

      - name: Export code coverage
        id: clarinet_codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.lcov
          verbose: true
