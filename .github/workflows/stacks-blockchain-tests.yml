##
## Run tests for tagged releases
##

name: Tests

# Only run when:
#   - manually triggered via the ci.yml workflow

on:
  workflow_dispatch:
  workflow_call:

env:
  RUSTFLAGS: "-Cinstrument-coverage"
  LLVM_PROFILE_FILE: "stacks-blockchain-%p-%m.profraw"
  BTC_VERSION: "0.20.0"

concurrency:
  group: stacks-bitcoin-integration-tests-${{ github.ref }}
  # Only cancel in progress if this is for a PR
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  # Run full genesis test
  full-genesis:
    name: Full Genesis Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the latest code
        id: git_checkout
        uses: actions/checkout@v3

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        id: setup_rust_toolchain
        with:
          toolchain: stable
          components: llvm-tools-preview

      - name: Install Bitcoin Binary
        id: install_bitcoin_binary
        run: |
          curl -LSf https://bitcoin.org/bin/bitcoin-core-${BTC_VERSION}/bitcoin-${BTC_VERSION}-x86_64-linux-gnu.tar.gz | tar zxf - -C /tmp
          sudo ln -s /tmp/bitcoin-${BTC_VERSION}/bin/bitcoind /bin/

      - name: Install Nextest
        id: install_nextest
        run: |
          curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin

      - name: Install grcov
        id: install_grcov
        run: |
          VERSION=$(curl -sL https://api.github.com/repos/mozilla/grcov/releases/latest | jq -r .tag_name)
          ARCH=x86_64
          LIBC=gnu
          PLATFORM=unknown-linux
          curl -LsSf "https://github.com/mozilla/grcov/releases/download/${VERSION}/grcov-${ARCH}-${PLATFORM}-${LIBC}.tar.bz2" | tar jxf - -C ${CARGO_HOME:-~/.cargo}/bin

      - name: Remove .dockerignore
        id: remove_dockerignore
        run: |
          rm .dockerignore

      - name: Run tests
        id: run_tests
        env:
          BITCOIND_TEST: 1
        run: |
          cd testnet/stacks-node && cargo nextest run --release --features prod-genesis-chainstate --test-threads 8 --build-jobs 8 --run-ignored all neon_integrations::bitcoind_integration_test

      - name: Run grcov
        id: run_grcov
        run: |
          grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info

      # - name: Large Genesis Codecov
      #   id: full_genesis_codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     files: ./lcov.info
      #     name: large_genesis
      #     fail_ci_if_error: true

  # Run unit tests with code coverage

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the latest code
        id: git_checkout
        uses: actions/checkout@v3

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        id: setup_rust_toolchain
        with:
          toolchain: stable
          components: llvm-tools-preview

      - name: Install Nextest
        id: install_nextest
        run: |
          curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin

      - name: Install grcov
        id: install_grcov
        run: |
          VERSION=$(curl -sL https://api.github.com/repos/mozilla/grcov/releases/latest | jq -r .tag_name)
          ARCH=x86_64
          LIBC=gnu
          PLATFORM=unknown-linux
          curl -LsSf "https://github.com/mozilla/grcov/releases/download/${VERSION}/grcov-${ARCH}-${PLATFORM}-${LIBC}.tar.bz2" | tar jxf - -C ${CARGO_HOME:-~/.cargo}/bin

      - name: Remove .dockerignore
        id: remove_dockerignore
        run: |
          rm .dockerignore

      - name: Run tests
        id: run_tests
        run: |
          cd testnet/stacks-node && cargo nextest run --release --features prod-genesis-chainstate --test-threads 8 --build-jobs 8 --run-ignored all neon_integrations::bitcoind_integration_test

      - name: Run grcov
        id: run_grcov
        run: |
          grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info

      # - name: Unit Test Codecov
      #   id: codedov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     files: ./lcov.info
      #     name: unit_tests
      #     fail_ci_if_error: true

  open-api-validation:
    name: OpenAPI Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the latest code
        id: git_checkout
        uses: actions/checkout@v3

      # use the public name of the action
      - name: Redoc
        id: run_redoc
        uses: seeebiii/redoc-cli-github-action@v10
        with:
          args: "bundle -o ./open-api-docs.html ./docs/rpc/openapi.yaml"

      - name: check result
        id: check_redoc
        run: |
          test -f ./open-api-docs.html || (echo "Missing ./open-api-docs.html from previous step." && exit 1)

      - name: Upload bundled html
        id: upload_html_artifact
        uses: actions/upload-artifact@v3
        with:
          name: open-api-bundle
          path: |
            ./open-api-docs.html

  # Run net-tests
  nettest:
    # disable this job/test for now, since we haven't seen this pass
    #  on github actions in a while, and the failures can take > 4 hours
    if: ${{ false }}
    name: Net-Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the latest code
        id: git_checkout
        uses: actions/checkout@v3
      - name: Run network relay tests
        id: nettest
        env:
          DOCKER_BUILDKIT: 1
        run: docker build -f ./.github/actions/bitcoin-int-tests/Dockerfile.net-tests .

  # Core contract tests
  core-contracts-clarinet-test:
    name: Core Contracts Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the latest code
        id: git_checkout
        uses: actions/checkout@v3

      - name: Execute core contract unit tests in Clarinet
        id: clarinet_unit_test
        uses: docker://hirosystems/clarinet:latest
        with:
          args: test --coverage --manifest-path=./contrib/core-contract-tests/Clarinet.toml

      - name: Export code coverage
        id: clarinet_codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.lcov
          verbose: true

  delete-cache:
    name: Delete Cache
    runs-on: ubuntu-latest
    needs:
      - full-genesis
      - unit_tests
    steps:
      - name: Cleanup
        env:
          REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete ${{ github.triggering_actor }}-${{ github.ref_name }}-${{ github.ref_type }}-${{ github.sha }} -R ${{ github.repository }} --confirm
          echo "Done"
