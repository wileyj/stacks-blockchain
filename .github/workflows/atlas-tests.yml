## Github workflow to run atlas tests

name: Tests::Atlas

on:
  workflow_call:

defaults:
  run:
    shell: bash

## env vars are transferred to `setup_tests` composite action step
env:
  BITCOIND_TEST: 1
  RUST_BACKTRACE: full
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 15
  RETRIES: 3
  RETRY_DELAY: 10000
  TEST_TIMEOUT: 30
  TEST_RETRIES: 2

concurrency:
  group: atlas-tests-${{ github.head_ref || github.ref || github.run_id}}
  ## Only cancel in progress if this is for a PR
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  # Atlas integration tests with code coverage
  atlas-tests:
    name: Atlas Test
    runs-on: ubuntu-latest
    ## Continue the workflow in case a step fails (ex a single test fails)
    continue-on-error: true
    strategy:
      ## Continue with the test matrix even if we've had a failure
      fail-fast: false
      ## Run a maximum of 2 concurrent tests from the test matrix
      max-parallel: 2
      matrix:
        test-name:
          - tests::neon_integrations::atlas_integration_test
          - tests::neon_integrations::atlas_stress_integration_test
    steps:
      ## Setup test environment
      - name:  Setup Test Environment
        id: setup_tests
        uses: wileyj/actions/stacks-blockchain/testenv@main

      ## Run test matrix using restored cache of archive file
      ##   - Test will timeout after env.TEST_TIMEOUT minutes
      - name: Run Tests
        id: run_tests
        timeout-minutes: ${{ fromJSON(env.TEST_TIMEOUT) }}
        run: |
          cargo nextest run \
            --archive-file /tmp/test_archive.tar.zst \
            --test-threads num-cpus \
            --retries ${{ fromJSON(env.TEST_RETRIES) }} \
            --run-ignored all \
            --no-fail-fast \
            --success-output immediate-final \
            --status-level fail \
            "${{ matrix.test-name }}"
        # run: |
        #   cargo nextest run \
        #     --test-threads num-cpus \
        #     --run-ignored all \
        #     --retries ${{ fromJSON(env.TEST_RETRIES) }} \
        #     --final-status-level fail \
        #     --fail-fast \
        #     --archive-file /tmp/test_archive.tar.zst \
        #     "${{ matrix.test-name }}"

      ## Create and upload code coverage file
      - name: Code Coverage
        id: codecov
        uses: wileyj/actions/codecov@main
        with:
          test-name: ${{ matrix.test-name }}

      - name: Check Failures
        if: steps.run_tests.outputs.status == 'failure' || steps.codecov.outputs.status == 'failure'
        run: exit 1