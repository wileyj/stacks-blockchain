##
## Atlas Tests
##

name: Tests::Atlas

on:
  ## run when create-cache has completed successfully
  ##  create-cache will run when an input-tag is provided, or a PR is approved
  # workflow_dispatch:
  workflow_call:
  # workflow_run:
  #   workflows: ["Create Test Caches"]
  #   types:
  #     - completed
  # ## old
  # ## run when tagging a release or a PR is approved
  # workflow_dispatch:
  # # workflow_call:
  # # pull_request_target:
  # #   paths:
  # #     - "**.rs"
  # #     - "**.clar"
  # # pull_request_target:
  # #   # Ignore if a commit only includes changes to a Markdown file.
  # #   paths-ignore:
  # #     - "**/*.md"
  # # push:
  # #   paths-ignore:
  # #     - "*.md"
  # #   tags:
  # #     - "[0-9]+.[0-9]+.[0-9]+.[0-9]+.[0-9]+" # 2.1.0.0.0
  # #     - "[0-9]+.[0-9]+.[0-9].[0-9]+.[0-9]+-rc[0-9]+" # 2.1.0.0.0-rc1
  # # pull_request_review:
  # #   types: [submitted]
  # workflow_run:
  #   workflows: ["Create Test Caches"]
  #   types:
  #     - completed
defaults:
  run:
    shell: bash

env:
  BITCOIND_TEST: 1
  RUST_BACKTRACE: full
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 15
  TEST_TIMEOUT: 30

concurrency:
  # https://github.com/orgs/community/discussions/13496
  # group: stacks-blockchain-tests-${{ github.ref }}
  group: atlas-tests-${{ github.workflow }}-${{ github.ref }}
  # Only cancel in progress if this is for a PR
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  # check-cache:
  #   # if: ${{ false }}
  #   name: Check Cache
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check Bitcoin Cache
  #       # uses: buildjet/cache@v3
  #       uses: actions/cache@v3
  #       id: check_cache
  #       with:
  #         lookup-only: true
  #         path: /tmp/bitcoin
  #         key: ${{ github.event.repository.name }}-bitcoin-binaries

  #     - name: Check Target Cache
  #       # uses: buildjet/cache@v3
  #       uses: actions/cache@v3
  #       id: check_target_cache
  #       with:
  #         lookup-only: true
  #         # path: ./target/debug
  #         # key: ${{ github.event.repository.name }}-target-debug
  #         # # key: ${{ github.event.repository.name }}-${{ github.sha }}-target-debug
  #         path: ./target
  #         key: ${{ github.event.repository.name }}-target

  # atlas integration tests with code coverage
  atlas-tests:
    # if: ${{ false }}
    name: Atlas Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        test-name:
          - tests::neon_integrations::atlas_integration_test
          - tests::neon_integrations::atlas_stress_integration_test
    steps:
      - name: CPU info
        run: |
          echo ""
          echo "CPU info:"
          cat /proc/cpuinfo
          echo ""
          echo "Memory:"
          free -m
          echo ""
          echo "Disk Type:"
          sudo lsblk -d -o name,rota
          echo ""

      - name: Checkout the latest code
        id: git_checkout
        uses: actions/checkout@v3

      - name: Setup Rust Toolchain
        id: setup_rust_toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: llvm-tools-preview
          cache: false

      - name: Restore Cargo Cache
        id: restore_cargo_cache
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ github.event.repository.name }}-cargo
          # key: ${{ github.event.repository.name }}-${{ github.sha }}-cargo

      - name: Restore Bitcoin Binary Cache
        id: restore_bitcoin_cache
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          path: /tmp/bitcoin
          key: ${{ github.event.repository.name }}-bitcoin-binaries

      - name: Restore Test Archive Cache
        id: restore_test-archive_cache
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          path: /tmp/test_archive.tar.zst
          key: ${{ github.event.repository.name }}-test-archive
          # key: ${{ github.event.repository.name }}-${{ github.sha }}-test-archive

      - name: Restore Target Cache
        id: restore_target_cache
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          path: ./target
          key: ${{ github.event.repository.name }}-target
          # key: ${{ github.event.repository.name }}-${{ github.sha }}-target

      - name: Link Bitcoin Binary
        id: bitcoin_binary
        run: |
          sudo ln -s /tmp/bitcoin/bin/bitcoind /bin/
          ls -al /bin/bitcoind

      - name: Run Tests
        id: run_tests
        timeout-minutes: ${{ env.TEST_TIMEOUT }}
        run: |
          cargo nextest run \
            --test-threads 1 \
            --run-ignored all \
            --retries 2 \
            --final-status-level fail \
            --archive-file /tmp/test_archive.tar.zst \
            "${{ matrix.test-name }}"

      - name: Run grcov
        id: run_grcov
        run: |
          grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info || exit 1

      # - name: Code Coverage
      #   id: code_coverage
      #   uses: codecov/codecov-action@v3
      #   with:
      #     files: ./lcov.info
      #     name: ${{ matrix.test-name }}
      #     fail_ci_if_error: false

      - name: Upload Code Coverage
        id: code_coverage
        uses: Wandalen/wretry.action@master
        with:
          action: codecov/codecov-action@v3
          with: |
            files: ./lcov.info
            name: ${{ matrix.test-name }}
            fail_ci_if_error: false
            verbose: true
          attempt_limit: 3
          attempt_delay: 10000
