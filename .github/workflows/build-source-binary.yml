##
## Builds binary assets of stacks-blockchain and creates a named tag github (draft) release
##

name: Build Distributable Binaries

# Only run when:
#   - manually triggered via the ci.yml workflow with a provided input tag

on:
  # push:
  #   tags:
  #     - "[0-9]+.[0-9]+.[0-9]+.[0-9]+.[0-9]+" # 2.1.0.0.0
  #     - "[0-9]+.[0-9]+.[0-9].[0-9]+.[0-9]+-rc[0-9]+" # 2.1.0.0.0-rc1
  # workflow_dispatch:
  #   inputs:
  #     tag:
  #       description: "Tag name of this release (x.y.z)"
  #       required: true
  #       type: string
  #     parallel_jobs:
  #       description: "Number of parallel binary builds"
  #       required: false
  #       type: number
  #       default: 8
  #     arch:
  #       description: "Stringified JSON object listing of platform matrix"
  #       required: true
  #       type: string
  #       default: >-
  #         ["linux-glibc-x64", "linux-musl-x64", "linux-glibc-arm64", "linux-musl-arm64", "macos-x64", "macos-arm64", "windows-x64"]

  workflow_call:
    inputs:
      tag:
        description: "Tag name of this release (x.y.z)"
        required: true
        type: string
      parallel_jobs:
        description: "Number of parallel binary builds"
        required: false
        type: number
        default: 8
      arch:
        description: "Stringified JSON object listing of platform matrix"
        required: true
        type: string
        default: >-
          ["linux-glibc-x64", "linux-musl-x64", "linux-glibc-arm64", "linux-musl-arm64", "macos-x64", "macos-arm64", "windows-x64"]

defaults:
  run:
    shell: bash

jobs:
  artifact:
    if: |
      inputs.tag != '' || (
        github.ref != format('refs/heads/{0}', github.event.repository.default_branch) && 
        !contains(github.ref, 'refs/pull')
      )
    name: Create Artifacts
    runs-on: ubuntu-latest
    strategy:
      max-parallel: ${{ inputs.parallel_jobs }}
      matrix:
        platform: ${{ fromJson(inputs.arch) }}
    steps:
      - name: Checkout the latest code
        id: git_checkout
        run: |
          echo "Checkout the latest code"

      # - name: Set Vars
      #   id: set_vars
      #   run: |
      #     echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
      #     echo "GITHUB_REF_SHORT=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        id: setup_buildx
        run: |
          echo "Set up Docker Buildx"

      - name: Build Binaries
        id: build_binaries
        run: |
          echo "Build Binaries"

      - name: Compress artifact
        id: compress_artifact
        run: |
          echo "Compress artifact"

      - name: Upload artifact
        id: upload_artifact
        run: |
          echo "Upload artifact"
