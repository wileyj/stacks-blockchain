##
## Create the github release and store artifact files (with checksum)
##

name: Github Release

# Only run when:
#   - manually triggered via the ci.yml workflow

on:
  # push:
  #   tags:
  #     - "[0-9]+.[0-9]+.[0-9]+.[0-9]+.[0-9]+" # 2.1.0.0.0
  #     - "[0-9]+.[0-9]+.[0-9].[0-9]+.[0-9]+-rc[0-9]+" # 2.1.0.0.0-rc1
  # workflow_run:
  #   workflows: ["Build Distributable Assets"]
  #   types:
  #     - completed
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      arch:
        description: "Stringified JSON object listing of platform matrix"
        required: true
        type: string
        default: >-
          ["linux-glibc-x64", "linux-musl-x64", "linux-glibc-arm64", "linux-musl-arm64", "macos-x64", "macos-arm64", "windows-x64"]
    secrets:
      GH_TOKEN:
        required: true

jobs:
  build-binaries:
    if: |
      inputs.tag != '' || (
        github.ref != format('refs/heads/{0}', github.event.repository.default_branch) && 
        !contains(github.ref, 'refs/pull')
      )
    name: Build Binaries
    # uses: wileyj/stacks-blockchain/.github/workflows/build-source-binary.yml@master
    uses: ./.github/workflows/build-source-binary.yml
    with:
      tag: ${{ inputs.tag }}
      parallel_jobs: 4
      arch: ${{ fromJson(inputs.arch) }}

  create-release:
    # if: ${{ inputs.tag != '' }}
    if: |
      inputs.tag != '' || (
        github.ref != format('refs/heads/{0}', github.event.repository.default_branch) && 
        !contains(github.ref, 'refs/pull')
      )
    name: Create Release
    runs-on: ubuntu-latest
    needs:
      - build-binaries
    steps:
      - name: echo
        run: |
          echo "create-release"

  run-tests:
    if: inputs.tag != ''
    name: Run Tests
    uses: ./.github/workflows/ci-tests.yml

  ## this can be a matrix of (alpine, debian) once the builds are DRY'ed
  docker-alpine:
    if: |
      inputs.tag != '' || (
        github.ref != format('refs/heads/{0}', github.event.repository.default_branch) && 
        !contains(github.ref, 'refs/pull')
      )
    name: Docker Alpine (Binary)
    # uses: wileyj/stacks-blockchain/.github/workflows/image-build-alpine-binary.yml@master
    uses: ./.github/workflows/image-build-alpine-binary.yml
    needs: build-binaries
    with:
      tag: ${{ inputs.tag }}
      dist: alpine
      # docker_platforms: linux/arm64, linux/amd64, linux/amd64/v2, linux/amd64/v3
    secrets: inherit
    # secrets:
    #   DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    #   DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

  docker-debian:
    if: |
      inputs.tag != '' || (
        github.ref != format('refs/heads/{0}', github.event.repository.default_branch) && 
        !contains(github.ref, 'refs/pull')
      )
    name: Docker Debian (Binary)
    # uses: wileyj/stacks-blockchain/.github/workflows/image-build-debian-binary.yml@master
    uses: ./.github/workflows/image-build-debian-binary.yml
    needs: build-binaries
    with:
      tag: ${{ inputs.tag }}
      dist: debian
      # docker_platforms: linux/amd64, linux/amd64/v2, linux/amd64/v3
      # linux_version: debian
      # build_type: binary
    secrets: inherit
    # secrets:
    #   DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    #   DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
