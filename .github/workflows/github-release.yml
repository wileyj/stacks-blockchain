##
## Create the github release and store artifact files (with checksum)
##

name: Github Release

# Only run when:
#   - manually triggered via the ci.yml workflow

on:
  # push:
  #   tags:
  #     - "[0-9]+.[0-9]+.[0-9]+.[0-9]+.[0-9]+" # 2.1.0.0.0
  #     - "[0-9]+.[0-9]+.[0-9].[0-9]+.[0-9]+-rc[0-9]+" # 2.1.0.0.0-rc1
  # workflow_run:
  #   workflows: ["Build Distributable Assets"]
  #   types:
  #     - completed
  # workflow_dispatch:
  #   inputs:
  #     tag:
  #       description: "Release Tag"
  #       required: true
  #       type: string
  #     arch:
  #       description: "Stringified JSON object listing of platform matrix"
  #       required: true
  #       type: string
  #       default: >-
  #         ["linux-glibc-x64", "linux-musl-x64", "linux-glibc-arm64", "linux-musl-arm64", "macos-x64", "macos-arm64", "windows-x64"]
  workflow_call:
    inputs:
      tag:
        description: "Release Tag"
        required: true
        type: string
      arch:
        description: "Stringified JSON object listing of platform matrix"
        required: true
        type: string
        default: >-
          ["linux-glibc-x64", "linux-musl-x64", "linux-glibc-arm64", "linux-musl-arm64", "macos-x64", "macos-arm64", "windows-x64"]
    secrets:
      GH_TOKEN:
        required: true

jobs:
  build-binaries:
    if: |
      inputs.tag != '' || (
        github.ref != format('refs/heads/{0}', github.event.repository.default_branch) && 
        !contains(github.ref, 'refs/pull')
      )
    name: Build Binaries
    # uses: wileyj/stacks-blockchain/.github/workflows/create-source-binary.yml@master
    uses: ./.github/workflows/create-source-binary.yml
    with:
      tag: ${{ inputs.tag }}
      parallel_jobs: 4
      arch: ${{ inputs.arch }}
    secrets: inherit

  create-release:
    # if: ${{ inputs.tag != '' }}
    if: |
      inputs.tag != '' || (
        github.ref != format('refs/heads/{0}', github.event.repository.default_branch) && 
        !contains(github.ref, 'refs/pull')
      )
    name: Create Release
    runs-on: ubuntu-latest
    needs:
      - build-binaries
    steps:
      - name: Download Artifacts
        id: download_artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: release

      # Generate a checksums file to be added to the release page
      - name: Generate Checksums
        id: generate_checksum
        uses: jmgilman/actions-generate-checksum@v1
        with:
          output: CHECKSUMS.txt
          patterns: |
            release/*.zip

      # Upload the release archives with the checksums file
      - name: Upload Release
        id: upload_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          name: Release ${{ github.event.inputs.tag || github.ref }}
          tag_name: ${{ github.event.inputs.tag || github.ref }}
          draft: false
          prerelease: true
          fail_on_unmatched_files: true
          files: |
            release/*.zip
            CHECKSUMS.txt

  docker-image:
    if: |
      inputs.tag != '' || (
        github.ref != format('refs/heads/{0}', github.event.repository.default_branch) &&
        !contains(github.ref, 'refs/pull')
      )
    name: Docker Image (Binary)
    # uses: wileyj/stacks-blockchain/.github/workflows/image-build-binary.yml@master
    uses: ./.github/workflows/image-build-binary.yml
    needs: build-binaries
    with:
      tag: ${{ inputs.tag }}
    secrets: inherit
    # secrets:
    #   DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    #   DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

  ## this can be a matrix of (alpine, debian) once the builds are DRY'ed
  # docker-alpine:
  #   if: |
  #     inputs.tag != '' || (
  #       github.ref != format('refs/heads/{0}', github.event.repository.default_branch) &&
  #       !contains(github.ref, 'refs/pull')
  #     )
  #   name: Docker Alpine (Binary)
  #   # uses: wileyj/stacks-blockchain/.github/workflows/image-build-alpine-binary.yml@master
  #   uses: ./.github/workflows/image-build-alpine-binary.yml
  #   needs: build-binaries
  #   with:
  #     tag: ${{ inputs.tag }}
  #     dist: alpine
  #     # docker_platforms: linux/arm64, linux/amd64, linux/amd64/v2, linux/amd64/v3
  #   secrets: inherit
  #   # secrets:
  #   #   DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  #   #   DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

  # docker-debian:
  #   if: |
  #     inputs.tag != '' || (
  #       github.ref != format('refs/heads/{0}', github.event.repository.default_branch) &&
  #       !contains(github.ref, 'refs/pull')
  #     )
  #   name: Docker Debian (Binary)
  #   # uses: wileyj/stacks-blockchain/.github/workflows/image-build-debian-binary.yml@master
  #   uses: ./.github/workflows/image-build-debian-binary.yml
  #   needs: build-binaries
  #   with:
  #     tag: ${{ inputs.tag }}
  #     dist: debian
  #     # docker_platforms: linux/amd64, linux/amd64/v2, linux/amd64/v3
  #     # linux_version: debian
  #     # build_type: binary
  #   secrets: inherit
  #   # secrets:
  #   #   DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  #   #   DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
