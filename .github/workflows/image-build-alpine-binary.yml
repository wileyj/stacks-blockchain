##
## Build the Docker Alpine image from the pre-built downloaded binary asset
##

name: Build Alpine Binary Image

# Only run when:
#   - manually triggered via the ci.yml workflow

on:
  #   # workflow_run:
  #   #   workflows: ["Build Distributable Binaries"]
  #   #   types:
  #   #     - completed
  #   push:
  #     tags:
  #       - "[0-9]+.[0-9]+.[0-9]+.[0-9]+.[0-9]+" # 2.1.0.0.0
  #       - "[0-9]+.[0-9]+.[0-9].[0-9]+.[0-9]+-rc[0-9]+" # 2.1.0.0.0-rc1
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
        description: "semver tag for alpine images"
      dist:
        required: true
        type: string
        description: "Linux Distribution"
      # docker_platforms:
      #   required: true
      #   description: "Arch to buid alpine images"
      #   type: string
      #   default: "linux/arm64, linux/amd64, linux/amd64/v2, linux/amd64/v3"
    # secrets:
    #   DOCKERHUB_USERNAME:
    #     required: true
    #   DOCKERHUB_PASSWORD:
    #     required: true

defaults:
  run:
    shell: bash

env:
  docker_platforms: "linux/arm64, linux/amd64, linux/amd64/v2, linux/amd64/v3"
  os_version: alpine

jobs:
  image:
    # Only run if a tag is provided manually
    if: inputs.tag != ''
    name: Build Image
    runs-on: ubuntu-latest
    ## this can DRY the image build and make multiple files unneeded
    # strategy:
    #   fail-fast: false
    #   max-parallel: 2
    #   matrix:
    #     dist:
    #       - alpine
    #       - debian
    ##
    steps:
      - name: echo
        run: |
          echo "image"
