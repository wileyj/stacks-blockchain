## Github workflow to build a docker image from binary artifacts
##  - Runs during a tagged release action
##   - Builds multi-arch images from release binaries for Debian/Alpine base images

name: Docker Image (Binary)

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
        description: "semver tag for alpine images"

defaults:
  run:
    shell: bash

## Define which docker arch to build for
env:
  docker_platforms: "linux/arm64, linux/amd64, linux/amd64/v2, linux/amd64/v3"

run-name: ${{ inputs.tag }}

jobs:
  ## Runs when the following is true:
  ##  - tag is provided
  ##  - workflow is building default branch (master)
  image:
    if: |
      inputs.tag != '' && 
      github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    name: Build Image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      ## Build a maximum of 2 images concurrently based on matrix.dist
      max-parallel: 2
      matrix:
        dist:
          - alpine
          - debian

    steps:
      ## Checkout the code
      - name: Checkout the latest code
        id: git_checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      ## Set some vars to be used in the build process
      - name: Set Vars
        id: set_vars
        run: |
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "GITHUB_REF_SHORT=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      ## Setup QEMU for multi-arch builds
      - name: Set up QEMU
        id: docker_qemu
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0

      ## Setup docker buildx
      - name: Set up Docker Buildx
        id: docker_buildx
        uses: docker/setup-buildx-action@4c0219f9ac95b02789c1075625400b2acbff50b1 # v2.9.1

      ## Login to dockerhub
      - name: Login to DockerHub
        id: docker_login
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      #######################################################
      ##  Alpine Image                                     ##
      #######################################################
      ## Set Alpine docker metatdata
      - name: Docker Metadata ( Alpine )
        if: ${{ matrix.dist == 'alpine' }}
        id: docker_metadata_alpine
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 #v4.6.0
        with:
          images: |
            wileyj/${{ github.event.repository.name }}
          tags: |
            type=raw,value=latest,enable=${{ inputs.tag != '' && (github.ref == format('refs/heads/{0}', github.event.repository.default_branch) )}}
            type=raw,value=${{ inputs.tag }}-${{ matrix.dist }},enable=${{ inputs.tag != '' }}
            type=raw,value=${{ inputs.tag }},enable=${{ inputs.tag != '' }}
            type=ref,event=tag,enable=true

      ## Build Alpine based docker image
      - name: Build and Push ( Alpine )
        if: ${{ matrix.dist == 'alpine' }}
        id: docker_build_alpine
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4.1.1
        with:
          file: ./.github/actions/dockerfiles/Dockerfile.${{ matrix.dist }}-binary
          platforms: ${{ env.docker_platforms }}
          tags: ${{ steps.docker_metadata_alpine.outputs.tags }}
          labels: ${{ steps.docker_metadata_alpine.outputs.labels }}
          build-args: |
            TAG=${{ inputs.tag}}
            STACKS_NODE_VERSION=${{ inputs.tag || env.GITHUB_SHA_SHORT }}
            GIT_BRANCH=${{ env.GITHUB_REF_SHORT }}
            GIT_COMMIT=${{ env.GITHUB_SHA_SHORT }}
          push: true

      #######################################################
      ##  Debian Image                                     ##
      #######################################################
      ## Set Debian docker metatdata
      - name: Docker Metadata ( Debian )
        if: ${{ matrix.dist == 'debian' }}
        id: docker_metadata_debian
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 #v4.6.0
        with:
          images: |
            wileyj/${{ github.event.repository.name }}
          tags: |
            type=raw,value=latest-${{ matrix.dist }},enable=${{ inputs.tag != '' && (github.ref == format('refs/heads/{0}', github.event.repository.default_branch) )}}
            type=raw,value=${{ inputs.tag }}-${{ matrix.dist }},enable=${{ inputs.tag != '' }}

      ## Build Debian based docker image
      - name: Build and Push ( Debian )
        if: ${{ matrix.dist == 'debian' }}
        id: docker_build_debian
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4.1.1
        with:
          file: ./.github/actions/dockerfiles/Dockerfile.${{ matrix.dist }}-binary
          platforms: ${{ env.docker_platforms }}
          tags: ${{ steps.docker_metadata_debian.outputs.tags }}
          labels: ${{ steps.docker_metadata_debian.outputs.labels }}
          build-args: |
            TAG=${{ inputs.tag}}
            STACKS_NODE_VERSION=${{ inputs.tag || env.GITHUB_SHA_SHORT }}
            GIT_BRANCH=${{ env.GITHUB_REF_SHORT }}
            GIT_COMMIT=${{ env.GITHUB_SHA_SHORT }}
          push: true
